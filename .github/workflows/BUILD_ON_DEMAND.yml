name: BUILD_ON_DEMAND
on:
  workflow_dispatch:
    inputs:
      buildName:
        description: 'Name of the build'
        required: true
      linkedDependencies:
        description: 'Dependencies to link from GitHub (format: bpmn-js#develop,dmn-js#9.0.0)'
        default: ''

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-2022 ]
    runs-on: ${{ matrix.os }}
    env:
      ON_DEMAND: true

    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Use Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 22
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Link dependencies
      env:
        LINKED_DEPENDENCIES: "${{ github.event.inputs.linkedDependencies }}"
      run: npm run link-dependencies

    - name: Import Secrets (Windows)
      if: ${{ runner.os == 'Windows' }}
      id: windowsSecrets
      uses: hashicorp/vault-action@v3.0.0
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          secret/data/products/rpa/ci/azure             CERT_PROFILE_NAME  | AZURE_CERT_PROFILE_NAME ;
          secret/data/products/rpa/ci/azure             CLIENT_ID          | AZURE_CLIENT_ID ;
          secret/data/products/rpa/ci/azure             CLIENT_SECRET      | AZURE_CLIENT_SECRET ;
          secret/data/products/rpa/ci/azure             CODE_SIGNING_NAME  | AZURE_CODE_SIGNING_NAME ;
          secret/data/products/rpa/ci/azure             SIGNING_ENDPOINT   | AZURE_ENDPOINT ;
          secret/data/products/rpa/ci/azure             TENANT_ID          | AZURE_TENANT_ID ;
          secret/data/products/desktop-modeler/ci/azure PUBLISHER_NAME     | AZURE_PUBLISHER_NAME ;

    - name: Build distro (Linux)
      if: ${{ runner.OS == 'Linux' }}
      env:
        BUILD_NAME: "${{ github.event.inputs.buildName }}"
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ON_DEMAND_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_ON_DEMAND_SECRET_ACCESS_KEY }}"
        AWS_REGION: "${{ secrets.AWS_ON_DEMAND_REGION }}"
        AWS_BUCKET: "${{ secrets.AWS_ON_DEMAND_BUCKET }}"
        CSC_LINK: "${{ secrets.CSC_LINK }}"
        CSC_KEY_PASSWORD: "${{ secrets.CSC_KEY_PASSWORD }}"
      run: npm run build -- --linux --publish --on-demand

    - name: Build distro (MacOS)
      if: ${{ runner.os == 'macOS' }}
      env:
        BUILD_NAME: "${{ github.event.inputs.buildName }}"
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ON_DEMAND_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_ON_DEMAND_SECRET_ACCESS_KEY }}"
        AWS_REGION: "${{ secrets.AWS_ON_DEMAND_REGION }}"
        AWS_BUCKET: "${{ secrets.AWS_ON_DEMAND_BUCKET }}"
        APPLE_DEVELOPER_ID: "${{ secrets.APPLE_DEVELOPER_ID }}"
        APPLE_DEVELOPER_ID_PASSWORD: "${{ secrets.APPLE_DEVELOPER_ID_PASSWORD }}"
        APPLE_TEAM_ID: "${{ secrets.APPLE_TEAM_ID }}"
        CSC_LINK: "${{ secrets.CSC_LINK }}"
        CSC_KEY_PASSWORD: "${{ secrets.CSC_KEY_PASSWORD }}"
      run: npm run build -- --mac --publish --on-demand

    - name: Build distro (Windows)
      if: ${{ runner.os == 'Windows' }}
      env:
        BUILD_NAME: "${{ github.event.inputs.buildName }}"
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ON_DEMAND_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_ON_DEMAND_SECRET_ACCESS_KEY }}"
        AWS_REGION: "${{ secrets.AWS_ON_DEMAND_REGION }}"
        AWS_BUCKET: "${{ secrets.AWS_ON_DEMAND_BUCKET }}"
        AZURE_CERT_PROFILE_NAME: "${{ steps.windowsSecrets.outputs.AZURE_CERT_PROFILE_NAME }}"
        AZURE_CLIENT_ID: "${{ steps.windowsSecrets.outputs.AZURE_CLIENT_ID }}"
        AZURE_CLIENT_SECRET: "${{ steps.windowsSecrets.outputs.AZURE_CLIENT_SECRET }}"
        AZURE_CODE_SIGNING_NAME: "${{ steps.windowsSecrets.outputs.AZURE_CODE_SIGNING_NAME }}"
        AZURE_ENDPOINT: "${{ steps.windowsSecrets.outputs.AZURE_ENDPOINT }}"
        AZURE_PUBLISHER_NAME: "${{ steps.windowsSecrets.outputs.AZURE_PUBLISHER_NAME }}"
        AZURE_TENANT_ID: "${{ steps.windowsSecrets.outputs.AZURE_TENANT_ID }}"
      run: npm run build -- --win --publish --on-demand
