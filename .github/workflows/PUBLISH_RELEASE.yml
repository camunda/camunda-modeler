name: PUBLISH_RELEASE
on:
  release:
    types:
    - released
jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Retrieve version
      id: retrieveVersion
      env:
        RELEASE_NAME: ${{ github.event.release.name }}
      run: echo "version=$(echo "$RELEASE_NAME" | cut -c 2-)" >> $GITHUB_OUTPUT
    - name: Download release artifacts
      run: |
        mkdir artifacts
        echo '${{ toJSON(github.event.release.assets.*.browser_download_url) }}' | jq '.[]' | xargs wget --directory-prefix artifacts

    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@v3.0.0
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          secret/data/common/jenkins/downloads-camunda-cloud_google_sa_key DOWNLOAD_CENTER_GCLOUD_KEY_BYTES | GCP_CREDENTIALS_NAME;
    - name: Upload artifacts to Camunda Download Center
      uses: camunda/infra-global-github-actions/download-center-upload@32cf1f42a2b0a71c9e9b5d04897907bc28d77e7a
      with:
        gcp_credentials: ${{ steps.secrets.outputs.GCP_CREDENTIALS_NAME }}
        env: 'prod'
        version: ${{ steps.retrieveVersion.outputs.version }}
        artifact_file: 'artifacts/*'

  post_failure:
    name: Notify failure
    needs: publish
    if: failure()
    runs-on: ubuntu-latest
    steps:
    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@v3.0.0
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          secret/data/products/desktop-modeler/ci/slack_integration SLACK_CHANNEL_ID;
          secret/data/products/desktop-modeler/ci/slack_integration SLACK_BOT_TOKEN;
    - name: Post to a Slack channel
      uses: slackapi/slack-github-action@v2
      with:
        method: chat.postMessage
        token: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
        payload: |
          channel: ${{ steps.secrets.outputs.SLACK_CHANNEL_ID }}
          text: "Failed to upload release. <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Go to the build.>"
